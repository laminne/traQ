name: master

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: traq
  IMAGE_TAG: master

jobs:
  image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set TRAQ_VERSION env
        run: echo "TRAQ_VERSION=master-SNAPSHOT" >> $GITHUB_ENV
      - name: Set TRAQ_REVISION env
        run: echo "TRAQ_REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Login GitHub Registry
        run: docker login docker.pkg.github.com -u traPtitech -p ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image
        run: docker build --build-arg TRAQ_VERSION=${TRAQ_VERSION} --build-arg TRAQ_REVISION=${TRAQ_REVISION} -t docker.pkg.github.com/traptitech/traq/${IMAGE_NAME}:${IMAGE_TAG} .
      - name: Push image to GitHub Registry
        run: docker push docker.pkg.github.com/traptitech/traq/${IMAGE_NAME}:${IMAGE_TAG}
  scan:
    name: Scan Image Vulnerability
    runs-on: ubuntu-18.04
    needs: [image]
    steps:
      - name: Login GitHub Registry
        run: docker login docker.pkg.github.com -u laminne -p ${{ secrets.GITHUB_TOKEN }}
      - name: Pull docker image
        run: docker pull docker.pkg.github.com/laminne/traq/${IMAGE_NAME}:${IMAGE_TAG}
      - uses: homoluctus/gitrivy@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          image: docker.pkg.github.com/laminne/traq/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  deploy-staging:
    name: Deploy staging
    runs-on: ubuntu-latest
    needs: [image]
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v1
        with:
          private-key: ${{ secrets.STAGING_SSH_KEY }}
          known-hosts: ${{ secrets.STAGING_KNOWN_HOSTS }}
      - name: Deploy
        run: ssh -o LogLevel=QUIET -t ${{ secrets.STAGING_DEPLOY_USER }}@${{ secrets.STAGING_DEPLOY_HOST }} "~/deploy.sh traq-backend"
